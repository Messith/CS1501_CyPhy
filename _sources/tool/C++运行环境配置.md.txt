## C++运行环境配置

> 官方参考文档：[Using GCC with MinGW](https://code.visualstudio.com/docs/cpp/config-mingw#_prerequisites)
>

CS1501-CyPhy课程使用[VS Code](https://zh.wikipedia.org/wiki/Visual_Studio_Code)作为代码编辑器，本文将介绍如何进行VS Code运行环境配置以完成C++文件的编译及可执行文件生成。

### 下载编译器

- Windows系统

  1. 进入网址https://sourceforge.net/projects/mingw-w64/files/，下滑选择并点击下载MinGW-W64 GCC-8.1.0列表下的x86_64-posix-seh文件。

  2. 下载得到后缀为.7z格式的压缩文件，解压后将bin文件夹的完整路径添加到环境变量中的PATH中去（右击此电脑属性——高级系统设置——环境变量——系统变量——选择path编辑添加）。

  3. 运行cmd调出命令行，在命令行中运行gcc –v。若显示出gcc的版本，则表示编译器安装成功。
  
     > 其他方法可参考[MinGW-w64的安装及配置教程](https://blog.csdn.net/didi_ya/article/details/111240502)

- Mac系统

  1. 在终端中输入命令`clang -version`检查mac上是否已安装clang。

  2. 若未安装clang，则运行命令`xcode-select -install`。

     > 若此方法不成功也可直接下载xcode获取clang编译器

### VS Code下载与配置

1. 进入[VS Code官网](https://code.visualstudio.com/)下载软件并安装。

2. 打开下载好的VS Code，点击左侧边栏第5个图标，搜索并安装插件Chinese(Simplified)、C/C++、Code Runner,重启后VS Code软件显示为中文界面。

3. •在电脑上新建文件夹，命名为EXAMPLE（可命名其他名字，但路径不能出现中文，下同）。打开VS Code，点击文件——打开文件夹——选择EXAMPLE，然后新建文件test.cpp，在编辑器中编写如下示例代码并保存。

   ```c++
   #include <iostream>
   
   using namespace std;
   
   int main()
   {
       cout << "Hello, world!" << endl;
       return 0;
   }
   ```

4. 点击终端——配置默认生成任务——选择C/C++:g++.exe选项（对于mac，选择C/C++:clang++ build active file），此时EXAMPLE目录下出现.vscode文件夹及配置文件tasks.json。

5. 切换到test.cpp，点击终端——运行生成任务，在EXAMPLE文件夹下会生成test.exe文件（mac上也会生成相应的test文件）。

6. 切换到test.cpp，点击运行——添加配置——选择C++(GDB/LLDB)——选择包含g++.exe的选项（mac上同样选择clang++ -Build abd debug active file），此时.vscode文件夹下出现配置文件launch.json。

7. 最后点击运行——启动调试（在windows电脑上可直接按F5运行）；或者直接点击右上方三角形按钮以非调试模式运行程序。若命令行或者输出中输出“Hello,world!”，则运行成功。

### 可能遇到的问题

------

##### 1、编译环境配置好了但是vs code中找不到c++编译器

**原因：**虽然编译器路径已经加入环境变量，但在VSCode中可能尚未生效。

**解决方法：**关闭vs code重启一遍；若无效，则尝试重启电脑再打开vs code；仍无效，则重装vs code。

------

##### 2、Windows系统下VS Code C++代码中文终端显示乱码

原因：Visual Studio Code终端实际调用的是cmd.exe，VS Code终端读取和写入数据使用的编码默认是UTF-8（在VSCode界面右下角有显示），而cmd的却不是UTF-8(可以通过chcp命令查看cmd的编码设置，默认是GB2312，即代码页编号是936，如图所示。

<img src=".\1_1.png" alt="1-2" style="zoom: 100%;" />

**解决方法：**将VS Code的编码改为与cmd的GB2312编码一致即可，这里改成GB2312是因为VS Code用的是cmd的控制台，而cmd的编码是GB2312。如果你不是gb2312就不是改成这个了，可以用chcp查看对应的编码方式再改为一致的即可。

**示例操作方案：**

- **方案一：**将一个源程序代码文件直接保存为gb2312编码格式（该方法只针对一个源程序文件有用，每建一个新的文件就要重新改一次，确保每次运行代码前右下角的编码方式都显示为GB2312。）

  1. VS Code右下角显示当前文件编码方式默认为UTF-8，点击UTF-8。

     <img src=".\1-2.png" alt="1-2" style="zoom: 40%;" />

  2. 点击“通过编码保存”选项。

     <img src=".\1-3.png" alt="1-2" style="zoom: 50%;" />

  3. 找到Simplified Chinese(GB2312)并选择。

     <img src=".\1-4.png" alt="1-2" style="zoom: 50%;" />

  4. 确保右下角已经从UTF-8改为了GB2312。

     <img src=".\1-5.png" alt="1-2" style="zoom: 40%;" />

  5. 将源程序代码中的中文字符重新输入，并保存后编译运行，问题解决。

- **方案二：**将整个文件夹直接保存为GB2312编码格式，该文件夹下的所有新建文件均会是GB2312编码方式，从而避免方案1的繁琐问题。（该方法针对一个文件夹可行，推荐使用此方法，能确保以后在该文件夹下的所有源程序文件均能正常运行。）

  1. 确保你已经在VS Code中打开了某个文件夹，如EXAMPLE文件夹，请在文件夹下进行以下操作！！！

  2. 依次点击“文件”-->“首选项”-->“设置”，打开设置。

  3. 在“搜索设置”一栏直接输入utf进行搜索。

     <img src=".\1-6.png" alt="1-2" style="zoom: 50%;" />

  4. 将UTF-8改为Simplified Chinese(GB 2312)。

     <img src=".\1-7.png" alt="1-2" style="zoom: 40%;" />

  5. 再次新建文件后检查右下角是否已经是GB2312编码。

  6. 将源程序代码中的中文字符重新输入，并保存后编译运行，问题解决。

